{-# OPTIONS --without-K --prop --rewriting #-}
module Unknown.All where

open import Agda.Primitive public
open import Unknown.Interface public

open import Unknown.Core
open import Unknown.Into
open import Unknown.Rel
open import Unknown.IntoRel

import Poset as P

module _ (fp : familyPack {lzero} {lzero})
         {{PB : ‚àÄ {c} ‚Üí P.Poset‚ÇÄ (familyPack.B fp c)}}
         (‚ú†B : ‚àÄ {c} ‚Üí P.Initial (familyPack.B fp c))
         where


  unknownStructure : BuildUnknown fp ‚ú†B
  unknownStructure = record
    { unknownType = ùï¶nknown fp ‚ú†B
    ; unknown-hSet = unknown-hSet fp ‚ú†B
    ; ‚ú†unk = ‚ú†unk fp ‚ú†B
    ; ?unk = ?unk fp ‚ú†B
    ; intoDistr = Œª {cx} ‚Üí IntoDistr.intoUnkŒµ-Distr fp ‚ú†B cx
    ; intoDistr-down‚ú† = Œª {cx} d {u} ‚Üí IntoDistr.from-unknown-‚ú†u fp ‚ú†B cx d u
    ; intoCompat = Œª {cx} {cy} dX dY dXY ‚Üí
        IntoDistrDownCompatEq.compat fp ‚ú†B cx cy dX dY (dXY .cxy) (dXY .distr) (dXY .down‚ú†) (dXY .distr-eq)  }
    where
      open intoDistrData hiding (down‚ú†)
      open intoDistrCompat
